name: Build Android APK

on:
  push:
    branches: [ automated-apk-builds ]
  pull_request:
    branches: [ automated-apk-builds ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Expo CLI
        run: npm install -g @expo/cli

      - name: Setup EAS CLI
        run: npm install -g eas-cli

      - name: Install dependencies
        run: npm ci

      - name: Authenticate with Expo
        run: eas login --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build Android APK
        run: eas build --platform android --profile preview-apk --non-interactive --wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: smartgrow-android-apk
          path: "*.apk"
          retention-days: 30

      - name: Comment PR with download link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ“± Android APK build completed! Download from the [Actions artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})'
            }) 